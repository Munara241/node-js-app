apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mysql
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mysql
  serviceName: "{{ .Release.Name }}-mysql"
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql
    spec:
      initContainers:
      - name: init-mysql
        image: busybox
        command:
        - sh
        - -c
        - rm -rf /var/lib/mysql/*
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      containers:
      - name: mysql
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - containerPort: {{ .Values.service.port }}
          name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.env.MYSQL_ROOT_PASSWORD }}
        - name: MYSQL_DATABASE
          value: {{ .Values.env.MYSQL_DATABASE }}
        - name: MYSQL_USER
          value: {{ .Values.env.MYSQL_USER }}
        - name: MYSQL_PASSWORD
          value: {{ .Values.env.MYSQL_PASSWORD }}
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: mysql-persistent-storage
    spec:
      accessModes: [ "{{ .Values.persistence.accessMode }}" ]
      #storageClassName: managed-premium
      resources:
        requests:
          storage: {{ .Values.persistence.storage }}
